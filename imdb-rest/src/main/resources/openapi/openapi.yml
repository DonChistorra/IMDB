openapi: 3.0.1
info:
  title: IMDB Open API
  description: |-
    This is the definition document for an IMDB wannabe OpenAPI.
    Only a few endpoints are available, just enough to deal with everything you could deal in this kind of document.
    If you have any interest about the OpenAPI 3.0 specification, you can also check at [https://swagger.io](https://swagger.io).
  contact:
    email: test@fakemail.net
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
  version: 0.0.1-SNASPSHOT
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/
    description: Local server
tags:
  - name: movie
    description: Everything about your most loved or most hated movies
  - name: actor
    description: Information about the registered actors
paths:
  /actors:
    get:
      tags:
        - actor
      summary: Get the list of registered actors
      description: Get the list of registered actors
      operationId: findAllActors
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindAllActorsResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal error
  /movies:
    get:
      tags:
        - movie
      summary: Get the list of registered movies
      description: Get the list of registered movies
      operationId: findAllMovies
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindAllMoviesResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal error
  /casting/{movieId}:
    get:
      tags:
        - casting
      summary: List of actors and their roles
      description: Returns a list of actors withe their role in the movie
      operationId: getCastingByMovieId
      parameters:
        - name: movieId
          in: path
          description: ID of movie for search
          required: true
          schema:
            type: integer
            format: int64
            example: 2
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCastingByMovieIdResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal error
components:
  schemas:
    FindAllActorsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        lastName:
          type: string
        firstName:
          type: string
        dateOfBirth:
          type: string
          format: date
    FindAllMoviesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
    GetCastingByMovieIdResponse:
      type: object
      properties:
        actor:
          type: string
          example: Bradd Pitt
        role:
          type: string
          example: Teniente Aldo Raine